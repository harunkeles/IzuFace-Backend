# Generated by Django 4.0.3 on 2022-04-14 03:49

import colorfield.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('posts', '0013_remove_postmodel_user_rank'),
    ]

    operations = [
        migrations.CreateModel(
            name='MiniPostTagModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Etiket adı')),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=18, samples=None)),
                ('slug', models.SlugField(default='emptySlug')),
            ],
        ),
        migrations.AlterField(
            model_name='postmodel',
            name='image',
            field=models.ImageField(blank=True, default='static/light_logo.png', help_text='Postun resmini seçiniz.', null=True, upload_to='blog/post/', verbose_name='Post Fotoğrafı '),
        ),
        migrations.CreateModel(
            name='MiniPostModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, help_text='Mini postun yazısını giriniz.', null=True, verbose_name='Mini post Yazısı')),
                ('image', models.ImageField(blank=True, help_text='Mini postun resmini seçiniz.', null=True, upload_to='', verbose_name='Mini post fotoğrafı ')),
                ('created_date', models.DateTimeField(default=datetime.datetime.now, verbose_name='Mini post oluşturulma tarihi')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Mini post güncelleme tarihi')),
                ('slug', models.SlugField(blank=True, max_length=200, null=True, unique=True)),
                ('likes', models.ManyToManyField(blank=True, null=True, related_name='miniPostLikes', to=settings.AUTH_USER_MODEL, verbose_name='Mini postu beğenenler')),
                ('post_owner', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Mini post sahibi')),
                ('tag', models.ManyToManyField(blank=True, help_text='Mini postun etiketlerini seçiniz.', related_name='miniPostTag', to='posts.miniposttagmodel', verbose_name='Mini post etiketleri ')),
            ],
        ),
    ]
